version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
    environment:
      - ENV=development
      - DEBUG=true
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=adam_ai
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - GOOGLE_CLIENT_ID=204892291397-8175phv5eajrn88rub5vj651qmg16cdl.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - GOOGLE_REDIRECT_URI=http://localhost:8000/api/v1/auth/google/callback
      - SECRET_KEY=your-secret-key-for-jwt-make-this-secure-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - BACKEND_CORS_ORIGINS=["http://localhost:3000"]
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["wait-for-db", "postgres", "entrypoint"]
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    networks:
      - adam-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
      - NEXT_PUBLIC_GOOGLE_CLIENT_ID=204892291397-8175phv5eajrn88rub5vj651qmg16cdl.apps.googleusercontent.com
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    command: npm run dev
    ports:
      - "3000:3000"
    networks:
      - adam-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=adam_ai
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5432:5432"
    networks:
      - adam-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d adam_ai"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  adam-network:
    driver: bridge

volumes:
  postgres_data: 